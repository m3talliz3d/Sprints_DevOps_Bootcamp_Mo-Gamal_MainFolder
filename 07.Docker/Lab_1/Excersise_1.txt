##############################
1. Check Docker Version
##############################
metallized@TUF-INSIDE:~$ docker --version
Docker version 20.10.12, build 20.10.12-0ubuntu4

##############################
2. Run Docker container hello-world
##############################
metallized@TUF-INSIDE:~$ docker run hello-world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
2db29710123e: Pull complete
Digest: sha256:faa03e786c97f07ef34423fccceeec2398ec8a5759259f94d99078f264e9d7af
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/
 
##############################
3. Run Reddis in detached mode
##############################
metallized@TUF-INSIDE:~$ docker run -d redis
Unable to find image 'redis:latest' locally
latest: Pulling from library/redis
a603fa5e3b41: Pull complete
77631c3ef092: Pull complete
ed3847cf62b8: Pull complete
261a8b530567: Pull complete
7d9005a8af6d: Pull complete
828da1afb5be: Pull complete
Digest: sha256:1e3207c292225b6dd21cb74d59255748a50e8f739dd983040df38fa913927cf1
Status: Downloaded newer image for redis:latest
208eac35254923daa8ba56d7cd0757fa4277174956e9c5d0c9dfb8299679d7bd


-- --

CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS      NAMES
208eac352549   redis     "docker-entrypoint.s…"   17 seconds ago   Up 16 seconds   6379/tcp   romantic_pascal

##############################
4. Stop Redis container
##############################
metallized@TUF-INSIDE:~$ docker stop 208eac352549
208eac352549

##############################
5. Check present container ID 
##############################
metallized@TUF-INSIDE:~$ docker ps -a
CONTAINER ID   IMAGE         COMMAND                  CREATED          STATUS                      PORTS     NAMES
208eac352549   redis         "docker-entrypoint.s…"   4 minutes ago    Exited (0) 20 seconds ago             romantic_pascal
ccecedec1c65   hello-world   "/hello"                 29 minutes ago   Exited (0) 29 minutes ago             wonderful_bassi

##############################
6. Check redis ID
##############################
208eac352549

##############################
7. Run nginx:alpine and delete it
##############################
metallized@TUF-INSIDE:~$ docker run nginx:alpine
Unable to find image 'nginx:alpine' locally
alpine: Pulling from library/nginx
ca7dd9ec2225: Pull complete
76a48b0f5898: Pull complete
2f12a0e7c01d: Pull complete
1a7b9b9bbef6: Pull complete
b704883c57af: Pull complete
4342b1ab302e: Pull complete
Digest: sha256:455c39afebd4d98ef26dd70284aa86e6810b0485af5f4f222b19b89758cabf1e
Status: Downloaded newer image for nginx:alpine
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2022/12/03 16:24:34 [notice] 1#1: using the "epoll" event method
2022/12/03 16:24:34 [notice] 1#1: nginx/1.23.2
2022/12/03 16:24:34 [notice] 1#1: built by gcc 11.2.1 20220219 (Alpine 11.2.1_git20220219)
2022/12/03 16:24:34 [notice] 1#1: OS: Linux 5.10.102.1-microsoft-standard-WSL2
2022/12/03 16:24:34 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
2022/12/03 16:24:34 [notice] 1#1: start worker processes
2022/12/03 16:24:34 [notice] 1#1: start worker process 30
2022/12/03 16:24:34 [notice] 1#1: start worker process 31
2022/12/03 16:24:34 [notice] 1#1: start worker process 32

-- --
metallized@TUF-INSIDE:~$ docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED         STATUS         PORTS     NAMES
b07a998190bf   nginx:alpine   "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   80/tcp    laughing_mayer

-- --
metallized@TUF-INSIDE:~$ docker rm b07a998190bf
b07a998190bf

##############################
8. Delete image Redis
##############################
metallized@TUF-INSIDE:~$ docker images
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
redis         latest    3358aea34e8c   2 weeks ago     117MB
nginx         alpine    19dd4d73108a   3 weeks ago     23.5MB
hello-world   latest    feb5d9fea6a5   14 months ago   13.3kB

-- --
metallized@TUF-INSIDE:~$ docker image rm 3358aea34e8c
Error response from daemon: conflict: unable to delete 3358aea34e8c (must be forced) - image is being used by stopped container 208eac352549

-- --
metallized@TUF-INSIDE:~$ docker ps -a
CONTAINER ID   IMAGE         COMMAND                  CREATED          STATUS                      PORTS     NAMES
208eac352549   redis         "docker-entrypoint.s…"   13 minutes ago   Exited (0) 9 minutes ago              romantic_pascal
ccecedec1c65   hello-world   "/hello"                 38 minutes ago   Exited (0) 38 minutes ago             wonderful_bassi
metallized@TUF-INSIDE:~$ docker rm 208eac352549
208eac352549

-- --
metallized@TUF-INSIDE:~$ docker image rm 3358aea34e8c
Untagged: redis:latest
Untagged: redis@sha256:1e3207c292225b6dd21cb74d59255748a50e8f739dd983040df38fa913927cf1
Deleted: sha256:3358aea34e8c871cc2ecec590dcefcf0945e76ec3f82071f30156ed1be97a5fb
Deleted: sha256:7a30c117f63b4e6c72fe3378afbcb9ce36379337b3637f332253cd798d751d13
Deleted: sha256:b1b46e21933d951137a11194588e082fe821c8f4c57442405e1eb5f52352e9a6
Deleted: sha256:3da53f799e971219b1588d420dc233fc0a24b20b63df235c0be7df3b3bbd489c
Deleted: sha256:ed4b2a727497ed285215178311ad360bce450969da5439d2b3c3dbf57e5b19d8
Deleted: sha256:eba15e26a17cb94c52a1cf638c83094c3fa65885f44f6698936b1680515ba228
Deleted: sha256:ec4a38999118b78eab6899b913a548cb0b2c9b68fd05aff846a56b628b597f38

-- --
metallized@TUF-INSIDE:~$ docker images
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
nginx         alpine    19dd4d73108a   3 weeks ago     23.5MB
hello-world   latest    feb5d9fea6a5   14 months ago   13.3kB

##############################
9. Pull image nginx:1.14-alpine
##############################
metallized@TUF-INSIDE:~$ docker pull nginx:1.14-alpine
1.14-alpine: Pulling from library/nginx
bdf0201b3a05: Pull complete
3d0a573c81ed: Pull complete
8129faeb2eb6: Pull complete
3dc99f571daf: Pull complete
Digest: sha256:485b610fefec7ff6c463ced9623314a04ed67e3945b9c08d7e53a47f6d108dc7
Status: Downloaded newer image for nginx:1.14-alpine
docker.io/library/nginx:1.14-alpine

##############################
10. Ubuntu image sleep 1000 & touch file test-file
##############################
metallized@TUF-INSIDE:~$ docker run ubuntu sleep 1000
Unable to find image 'ubuntu:latest' locally
latest: Pulling from library/ubuntu
e96e057aae67: Pull complete
Digest: sha256:4b1d0c4a2d2aaf63b37111f34eb9fa89fa1bf53dd6e4ca954d47caebca4005c2
Status: Downloaded newer image for ubuntu:latest

-- --
metallized@TUF-INSIDE:~$ docker ps
CONTAINER ID   IMAGE     COMMAND        CREATED              STATUS              PORTS     NAMES
5467ef101938   ubuntu    "sleep 1000"   About a minute ago   Up About a minute             lucid_mayer

-- --
metallized@TUF-INSIDE:~$ docker exec -it 5467ef101938 bash
root@5467ef101938:/# ls
bin   dev  home  lib32  libx32  mnt  proc  run   srv  tmp  var
boot  etc  lib   lib64  media   opt  root  sbin  sys  usr
root@5467ef101938:/# cd ~
root@5467ef101938:~# ls
root@5467ef101938:~# touch test-file
root@5467ef101938:~# ls -l
total 0
-rw-r--r-- 1 root root 0 Dec  3 17:06 test-file


##############################
11. Run nginx:alpine with name web
##############################
metallized@TUF-INSIDE:~$ docker run --name web nginx:1.14-alpine

-- --
metallized@TUF-INSIDE:~$ docker ps
CONTAINER ID   IMAGE               COMMAND                  CREATED         STATUS         PORTS     NAMES
d70888dc891f   nginx:1.14-alpine   "nginx -g 'daemon of…"   6 seconds ago   Up 5 seconds   80/tcp    web

##############################
12. Delete all images from host
##############################
metallized@TUF-INSIDE:~$ echo 'Docker container:'; docker ps -a ;echo 'Docker Images:'; docker images
Docker container:
CONTAINER ID   IMAGE               COMMAND                  CREATED              STATUS                            PORTS     NAMES
d70888dc891f   nginx:1.14-alpine   "nginx -g 'daemon of…"   About a minute ago   Exited (0) 19 seconds ago                   web
5467ef101938   ubuntu              "sleep 1000"             6 minutes ago        Exited (137) About a minute ago             lucid_mayer
ccecedec1c65   hello-world         "/hello"                 About an hour ago    Exited (0) About an hour ago                wonderful_bassi
Docker Images:
REPOSITORY    TAG           IMAGE ID       CREATED         SIZE
nginx         alpine        19dd4d73108a   3 weeks ago     23.5MB
ubuntu        latest        a8780b506fa4   4 weeks ago     77.8MB
hello-world   latest        feb5d9fea6a5   14 months ago   13.3kB
nginx         1.14-alpine   8a2fb25a19f5   3 years ago     16MB

-- --
metallized@TUF-INSIDE:~$ for i in `docker ps -a | awk '{print $1}' | grep -v CONT`; do docker stop $i && docker rm $i;done
d70888dc891f
d70888dc891f
5467ef101938
5467ef101938
ccecedec1c65
ccecedec1c65

-- --
metallized@TUF-INSIDE:~$ echo 'Docker container:'; docker ps -a ;echo 'Docker Images:'; docker images
Docker container:
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
Docker Images:
REPOSITORY    TAG           IMAGE ID       CREATED         SIZE
nginx         alpine        19dd4d73108a   3 weeks ago     23.5MB
ubuntu        latest        a8780b506fa4   4 weeks ago     77.8MB
hello-world   latest        feb5d9fea6a5   14 months ago   13.3kB
nginx         1.14-alpine   8a2fb25a19f5   3 years ago     16MB

-- --
metallized@TUF-INSIDE:~$ for i in `docker images | awk '{print $3}' | grep -v IMAGE`; do docker rmi  $i ;done
Untagged: nginx:alpine
Untagged: nginx@sha256:455c39afebd4d98ef26dd70284aa86e6810b0485af5f4f222b19b89758cabf1e
Deleted: sha256:19dd4d73108a1feefc29d299f3727467ac02486c83474fc3979e4a7637291fe6
Deleted: sha256:f4ce01b14251afcef8b6445b0c1c7cfa1ae95a5fa043e70afcdfb301f316b1a1
Deleted: sha256:16ce77ead235d1d248180cffd6ed249f93ecabdca2412415b9b1e9d36efbf8e7
Deleted: sha256:1c2a7b8fa3815d497784080cf5d92231a65c01ebdc4e347b7a66e8cc342885f7
Deleted: sha256:38c72402708547d70a11471edb18fafeb76c55c8bebb22dc5a8a3636828dbea3
Deleted: sha256:6cd2aff1d9b800fdff5b7cc4bd4f2f175e8e24c2a8e97eca5177601d40d34a57
Deleted: sha256:e5e13b0c77cbb769548077189c3da2f0a764ceca06af49d8d558e759f5c232bd
Untagged: ubuntu:latest
Untagged: ubuntu@sha256:4b1d0c4a2d2aaf63b37111f34eb9fa89fa1bf53dd6e4ca954d47caebca4005c2
Deleted: sha256:a8780b506fa4eeb1d0779a3c92c8d5d3e6a656c758135f62826768da458b5235
Deleted: sha256:f4a670ac65b68f8757aea863ac0de19e627c0ea57165abad8094eae512ca7dad
Untagged: hello-world:latest
Untagged: hello-world@sha256:faa03e786c97f07ef34423fccceeec2398ec8a5759259f94d99078f264e9d7af
Deleted: sha256:feb5d9fea6a5e9606aa995e879d862b825965ba48de054caab5ef356dc6b3412
Deleted: sha256:e07ee1baac5fae6a26f30cabfe54a36d3402f96afda318fe0a96cec4ca393359
Untagged: nginx:1.14-alpine
Untagged: nginx@sha256:485b610fefec7ff6c463ced9623314a04ed67e3945b9c08d7e53a47f6d108dc7
Deleted: sha256:8a2fb25a19f5dc1528b7a3fabe8b3145ff57fe10e4f1edac6c718a3cf4aa4b73
Deleted: sha256:f68a8bcb9dbd06e0d2750eabf63c45f51734a72831ed650d2349775865d5fc20
Deleted: sha256:cbf2c7789332fe231e8defa490527a7b2c3ae8589997ceee00895f3263f0a8cf
Deleted: sha256:894f3fad7e6ecd7f24e88340a44b7b73663a85c0eb7740e7ade169e9d8491a4c
Deleted: sha256:a464c54f93a9e88fc1d33df1e0e39cca427d60145a360962e8f19a1dbf900da9

-- --
metallized@TUF-INSIDE:~$ echo 'Docker container:'; docker ps -a ;echo 'Docker Images:'; docker images
Docker container:
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
Docker Images:
REPOSITORY   TAG       IMAGE ID   CREATED   SIZE

##############################
13. Run nginx alpine with port 38282
##############################
metallized@TUF-INSIDE:~$ docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS
     NAMES
6bc939cb55e5   nginx:alpine   "/docker-entrypoint.…"   10 minutes ago   Up 27 seconds   80/tcp, 0.0.0.0:38282->8080/tcp   nginx


##############################
14. Ubuntu Size
##############################
metallized@TUF-INSIDE:~$ docker images
REPOSITORY   TAG       IMAGE ID       CREATED       SIZE
ubuntu       latest    a8780b506fa4   4 weeks ago   77.8MB

##############################
15. Run kodekloud/simple-webapp
##############################
metallized@TUF-INSIDE:~$ docker run --name color -e APP_COLOR="blue" -p 8080:8080 kodekloud/simple-webapp:latest
 This is a sample web application that displays a colored background.
 A color can be specified in two ways.

 1. As a command line argument with --color as the argument. Accepts one of red,green,blue,blue2,pink,darkblue
 2. As an Environment variable APP_COLOR. Accepts one of red,green,blue,blue2,pink,darkblue
 3. If none of the above then a random color is picked from the above list.
 Note: Command line argument precedes over environment variable.


##############################
16. mysql with password db_pass123 and name mysql-db, then inspect
##############################
metallized@TUF-INSIDE:~$ docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS
     NAMES
478c67efbf7b   mysql          "docker-entrypoint.s…"   49 seconds ago   Up 46 seconds   3306/tcp, 33060/tcp mysql-db

-- --
metallized@TUF-INSIDE:~$ docker inspect 478c67efbf7b
[
    {
        "Id": "478c67efbf7b7883f0715732a3709398432ecbf80a2113e8927d31d4d49aad97",
        "Created": "2022-12-03T17:44:40.8765783Z",
        "Path": "docker-entrypoint.sh",
        "Args": [
            "mysqld"
        ],
        "State": {
            "Status": "running",
            "Running": true,
.
.
.
.
"Config": {
            "Hostname": "478c67efbf7b",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": true,
            "AttachStderr": true,
            "ExposedPorts": {
                "3306/tcp": {},
                "33060/tcp": {}
            },
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "MYSQL_ROOT_PASSWORD=db_pass123",
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                "GOSU_VERSION=1.14",
                "MYSQL_MAJOR=8.0",
                "MYSQL_VERSION=8.0.31-1.el8",
                "MYSQL_SHELL_VERSION=8.0.31-1.el8"
            ],
            "Cmd": [
                "mysqld"
            ],
            "Image": "mysql",
            "Volumes": {
                "/var/lib/mysql": {}

##############################
17. Pull code from github and create docker file for the flask app
##############################



##############################
18. create volume called mysql_data
##############################



##############################
19. store data at /var/lib/mysql on the same mysql container
##############################

